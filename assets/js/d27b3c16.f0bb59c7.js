"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[588],{4148:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>n,metadata:()=>s,toc:()=>h});var i=o(5893),a=o(1151);const n={sidebar_position:1},r="Context",s={id:"chapter-1/intro",title:"Context",description:"written by Martijn Benjamin (appeltje-c)",source:"@site/docs/chapter-1/intro.md",sourceDirName:"chapter-1",slug:"/chapter-1/intro",permalink:"/chapter-1/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/appeltje-c/appeltje-c.github.io/tree/main/docs/chapter-1/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Hello \ud83d\udc4b\ud83c\udffd",permalink:"/"},next:{title:"Get the hands dirty",permalink:"/chapter-1/gthd"}},l={},h=[{value:"Browser or Native",id:"browser-or-native",level:2},{value:"User Interface",id:"user-interface",level:2},{value:"React",id:"react",level:3},{value:"Create React App",id:"create-react-app",level:3},{value:"Typescript",id:"typescript",level:3},{value:"User Experience",id:"user-experience",level:2},{value:"Material UI",id:"material-ui",level:3},{value:"Initialize Git Repo",id:"initialize-git-repo",level:2}];function c(e){const t={a:"a",blockquote:"blockquote",h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"context",children:"Context"}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["written by ",(0,i.jsx)(t.a,{href:"https://www.linkedin.com/in/martijn-benjamin/",children:"Martijn Benjamin"})," (",(0,i.jsx)(t.a,{href:"https://github.com/appeltje-c",children:"appeltje-c"}),")"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"One of the many cool moments in a project is the start. The moment where you have in mind where you want to go, you have a vision, you can see it ready."}),"\n",(0,i.jsx)(t.p,{children:"Creating your app materializes the begin of this future with the awesome stuff you have in mind."}),"\n",(0,i.jsx)(t.p,{children:"Having said that, the first fundamental questions will arise immediately; what language will I write my app in, where to store data, how do front and back interact, where do I want to deploy?"}),"\n",(0,i.jsx)(t.p,{children:"By the time your App is shining with awesome features you will have answered most if not all of these questions. Usually we can or do not want to answer all these questions upfront and because of that it is helpful to make technology choices that do not force us in any given direction. We want to avoid getting stuck in any way and potentially limit the future of our App. Keeping the freedom to choose has its trade-offs (we'll talk about them later) although I think it brings more rewards in the long run."}),"\n",(0,i.jsx)(t.p,{children:"We have got some choices to make!"}),"\n",(0,i.jsx)(t.h2,{id:"browser-or-native",children:"Browser or Native"}),"\n",(0,i.jsx)(t.p,{children:"One of the first questions you come across when creating an app is where you want to make your App available. Do you want to offer it through the Browser or through downloads from the major App stores? Or both."}),"\n",(0,i.jsx)(t.p,{children:"Not long ago the answer to this question was mostly determined by the need of functionality that is only accessible when using mobile native frameworks available for platforms like Android or iOS and the concern of bringing a 'real' app look & feel."}),"\n",(0,i.jsxs)(t.p,{children:["When we look at the improvements of hardware API access in the browser and Google's ",(0,i.jsx)(t.a,{href:"https://web.dev/learn/pwa/welcome",children:"Progressive Web App"})," (PWA) and ",(0,i.jsx)(t.a,{href:"https://developer.chrome.com/docs/android/trusted-web-activity",children:"Trusted Web Activity"})," (TWA) efforts past years we see there are virtually no missing native functionality concerns anymore. Which makes choosing for a Web App that can be served through any browser, ",(0,i.jsx)(t.strong,{children:"and"})," is deployable in the App stores as well, a good option."]}),"\n",(0,i.jsx)(t.p,{children:"Major advantage of these wrapped web apps is that development time is drastically decreased, you can have your App live at a fraction of the cost of native development. In terms of user experience the 'Appy' look & feel and performance is also closing in on native fast."}),"\n",(0,i.jsx)(t.p,{children:"Progressive Web Apps are doing a great job as Mobile App and as long as you are sure there are no unacceptable hardware API access limitations or pressing performance reasons, you can create a PWA."}),"\n",(0,i.jsx)(t.p,{children:"And that is what we will do, create a PWA and cover what it takes to deploy it to the major App stores."}),"\n",(0,i.jsx)(t.h2,{id:"user-interface",children:"User Interface"}),"\n",(0,i.jsx)(t.p,{children:"With the choice for browser app development in our pocket we can advance to the question how we will be building our User Interface (UI). We will have to create page layouts with input fields, select boxes, sliders and many more controls to have a useful App."}),"\n",(0,i.jsxs)(t.p,{children:["There is a plethora of frameworks and libraries out there that more or less get the job done. Think of frameworks that use server side code to build and generate your App like ",(0,i.jsx)(t.a,{href:"https://vaadin.com/",children:"Vaadin"}),", fully fledged Javascript frameworks like ",(0,i.jsx)(t.a,{href:"https://vuejs.org",children:"Vue.js"})," or lightweight solutions like ",(0,i.jsx)(t.a,{href:"https://preactjs.com/",children:"Preact"})," and ",(0,i.jsx)(t.a,{href:"https://react.dev",children:"React"})]}),"\n",(0,i.jsx)(t.p,{children:"The debate on which is good, better, best is endless and the arguments vary widely from personal preference, learning curve concerns to market knowledge availability, community support and features. If you look at these arguments within the context of whoever raised them, they mostly make sense and have some understandable point to it. In other words, the technology choice you make in practice heavily depends on the specifics of your situation and the goals you are trying to achieve. Anyone selling you a one-solution-fits-all opinion did not get very dirty hands themselves."}),"\n",(0,i.jsx)(t.p,{children:"In these docs we are working with React to create our user interface. The next section talks about what makes React a good fit to build your apps."}),"\n",(0,i.jsx)(t.h3,{id:"react",children:"React"}),"\n",(0,i.jsx)(t.p,{children:"React has been released by Facebook in 2013 and went through some serious growth since then. Many developers adopted the technology, large communities were formed and the ecosystem grew steadily in size and maturity. Today there are millions of React applications in use by a multitude of users."}),"\n",(0,i.jsxs)(t.p,{children:["The way React lets you organize your code and the efficient and elegant way page updates are applied still comes to me as a joy after years of working with it. ",(0,i.jsx)(t.a,{href:"https://www.codecademy.com/article/react-virtual-dom",children:"The virtual DOM"})," is a great feature."]}),"\n",(0,i.jsx)(t.p,{children:'With an intuitive and natural feel to it, no forceful or mind bending concepts, you can compare it to creating your own "tags" (called components in React lingo) similar as you would with html. The ability to declare and organize your code into reusable components that encapsulate their own responsibility and logic enables you to make very complex layouts in a clean and maintainable way.'}),"\n",(0,i.jsx)(t.p,{children:"And that's about it, React renders your UI, it does not do much more. Which is great!"}),"\n",(0,i.jsx)(t.p,{children:"When it comes to for example routing, making API calls or localizing your App, React does not provide any solutions. You have to add those solutions yourself. This might be a bit overwhelming at first and it can sound tempting to go for a 'batteries included' framework where you get it delivered in one box."}),"\n",(0,i.jsx)(t.p,{children:"The upside of having to add those solutions yourself is that you are completely free to use whatever you like. React is unobtrusive and has zero opinion on how you do things in your App. You can even use it alongside other UI technology."}),"\n",(0,i.jsx)(t.p,{children:"It is a good idea to choose technology that is useful while not dragging in decisions you did not make yourself."}),"\n",(0,i.jsx)(t.h3,{id:"create-react-app",children:"Create React App"}),"\n",(0,i.jsxs)(t.p,{children:["Your project, regardless of which framework or library you want to use, will commonly use build tools to perform transpile, linting and minification optimizations on your App before releasing it to your audience. Most projects use tools like ",(0,i.jsx)(t.a,{href:"https://babeljs.io/",children:"babel"}),", ",(0,i.jsx)(t.a,{href:"https://webpack.js.org/",children:"webpack"})," and ",(0,i.jsx)(t.a,{href:"https://eslint.org/",children:"eslint"})," to get those jobs done."]}),"\n",(0,i.jsx)(t.p,{children:"These build tools are very powerful and do a great job while knowing the ins and outs of these tools can take some time. They have vast configuration possibilities which can be very overwhelming and much to take in at first. It can complicate things pretty quickly and take the focus away from what we actually would like to do, build an App."}),"\n",(0,i.jsx)(t.p,{children:"There are many frameworks that provide those build tools included which gets you ready and coding your App in no time. React does not provide any of these tools, it has the focus only on rendering your UI, how you maintain your build process is completely up to you."}),"\n",(0,i.jsx)(t.p,{children:"While many frameworks include a build process, chances are that you get locked-in with those tools and other framework goodies altogether."}),"\n",(0,i.jsx)(t.p,{children:"Luckily we can avoid that!"}),"\n",(0,i.jsxs)(t.p,{children:["While our choice for React does not bring us any build tools, it does not mean we have to go through the pain of setting up our own build environment. We are going to use ",(0,i.jsx)(t.a,{href:"https://create-react-app.dev",children:"create-react-app"})," which offers a modern web app development setup with pre-configured tools ready to use."]}),"\n",(0,i.jsx)(t.p,{children:"It bundles a set of 'best practice' configured build tools nicely tucked away 'under-the-hood' in one package which means we have to do less initial learning and cut down drastically on our project dependencies and setup of configuration files."}),"\n",(0,i.jsx)(t.p,{children:"we can eject out from under the hood with one command should we ever need to edit the configuration files ourselves directly."}),"\n",(0,i.jsx)(t.p,{children:"add ejected example"}),"\n",(0,i.jsx)(t.h3,{id:"typescript",children:"Typescript"}),"\n",(0,i.jsx)(t.h2,{id:"user-experience",children:"User Experience"}),"\n",(0,i.jsx)(t.h3,{id:"material-ui",children:"Material UI"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://m3.material.io/develop/web",children:"https://m3.material.io/develop/web"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://mui.com/material-ui/",children:"https://mui.com/material-ui/"})}),"\n",(0,i.jsx)(t.h2,{id:"initialize-git-repo",children:"Initialize Git Repo"}),"\n",(0,i.jsx)(t.p,{children:"To keep track of the changes to your app while you are adding new features it's common to use a source repository. We are going to make use of git, a powerful versioning tool created by Linus Torvalds the creator of Linux."}),"\n",(0,i.jsxs)(t.p,{children:["If you are not familiar with git I suggest to catch-up with it by reading the docs ",(0,i.jsx)(t.a,{href:"https://git-scm.com/docs/gittutorial",children:"here"})]})]})}function d(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);