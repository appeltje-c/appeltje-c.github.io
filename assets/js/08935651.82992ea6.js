"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3967],{7714:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=s(5893),t=s(1151);const o={},l=void 0,i={id:"blender/colors/colors",title:"colors",description:"Watch",source:"@site/docs/08-blender/03-colors/colors.md",sourceDirName:"08-blender/03-colors",slug:"/blender/colors/colors",permalink:"/blender/colors/colors",draft:!1,unlisted:!1,editUrl:"https://github.com/appeltje-c/appeltje-c.github.io/tree/main/docs/08-blender/03-colors/colors.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Colors",permalink:"/category/colors"}},a={},c=[{value:"<strong>1. Understand the Purpose and Mood</strong>",id:"1-understand-the-purpose-and-mood",level:3},{value:"<strong>2. Use a Limited Palette</strong>",id:"2-use-a-limited-palette",level:3},{value:"<strong>3. Experiment with Value and Saturation</strong>",id:"3-experiment-with-value-and-saturation",level:3},{value:"<strong>4. Use Reference Material</strong>",id:"4-use-reference-material",level:3},{value:"<strong>5. Tools and Techniques</strong>",id:"5-tools-and-techniques",level:3},{value:"<strong>6. Testing in Blender</strong>",id:"6-testing-in-blender",level:3},{value:"<strong>7. Iterate and Get Feedback</strong>",id:"7-iterate-and-get-feedback",level:3},{value:"Bonus Tips",id:"bonus-tips",level:3}];function d(e){const n={a:"a",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Watch\n",(0,r.jsx)(n.a,{href:"https://www.youtube.com/watch?v=Komry1kruHs",children:"https://www.youtube.com/watch?v=Komry1kruHs"})]}),"\n",(0,r.jsxs)(n.p,{children:["Color theory\n",(0,r.jsx)(n.a,{href:"https://www.udemy.com/course/color-theory-hitt-nichols/",children:"https://www.udemy.com/course/color-theory-hitt-nichols/"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/watch?v=Komry1kruHs",children:"https://www.youtube.com/watch?v=Komry1kruHs"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.colormatters.com/color-and-design/basic-color-theory",children:"https://www.colormatters.com/color-and-design/basic-color-theory"})}),"\n",(0,r.jsx)(n.p,{children:"Choosing colors for your low-poly Blender models is crucial for setting the mood, ensuring visual clarity, and enhancing the overall aesthetic of your creations. Here\u2019s a step-by-step guide to help you select and implement colors effectively:"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"1-understand-the-purpose-and-mood",children:(0,r.jsx)(n.strong,{children:"1. Understand the Purpose and Mood"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Theme and Context:"})," Determine the purpose of your model (e.g., game, animation, illustration) and its context. A fantasy forest will have a different palette than a futuristic city."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mood and Emotion:"})," Warm colors (reds, oranges, yellows) evoke energy and passion, while cool colors (blues, greens, purples) convey calm and serenity."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"2-use-a-limited-palette",children:(0,r.jsx)(n.strong,{children:"2. Use a Limited Palette"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Simplicity is Key:"})," Low-poly models often look best with a limited color palette, as too many colors can make the design feel cluttered."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Triadic or Analogous Schemes:"})," Use complementary or harmonious colors from the color wheel.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Triadic:"})," Balanced and vibrant (e.g., blue, red, yellow)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Analogous:"})," Softer and harmonious (e.g., green, blue-green, blue)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"3-experiment-with-value-and-saturation",children:(0,r.jsx)(n.strong,{children:"3. Experiment with Value and Saturation"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Contrast:"})," Use varying brightness and saturation to make important elements stand out."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Depth:"})," Lighter and desaturated tones can indicate distance or less importance, while saturated colors draw attention."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"4-use-reference-material",children:(0,r.jsx)(n.strong,{children:"4. Use Reference Material"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-world References:"})," Look at nature, photos, or real objects similar to your model\u2019s theme."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Artworks or Movies:"})," Study the color schemes of popular games or animations that share your desired aesthetic."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"5-tools-and-techniques",children:(0,r.jsx)(n.strong,{children:"5. Tools and Techniques"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Color Palette Generators:"})," Tools like Adobe Color, Coolors, or Canva\u2019s palette generator help create cohesive palettes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pre-made Palettes:"})," Use palettes from websites like ",(0,r.jsx)(n.a,{href:"https://lospec.com/",children:"Lospec"})," for pixel art and low-poly styles."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Gradient Mapping:"})," Apply smooth transitions between colors for extra flair."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"6-testing-in-blender",children:(0,r.jsx)(n.strong,{children:"6. Testing in Blender"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flat Colors vs. Gradients:"})," For low-poly, flat colors often work better. Gradients can be applied sparingly to add subtle variation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Light Interaction:"})," Test colors under your lighting setup. Lighting can drastically change how colors appear."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Material Assignment:"})," Assign different materials or colors to key areas of your model for visual balance."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"7-iterate-and-get-feedback",children:(0,r.jsx)(n.strong,{children:"7. Iterate and Get Feedback"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Experiment:"})," Don\u2019t hesitate to test multiple palettes to see what works best."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Feedback:"})," Share your work with peers or online communities for constructive criticism."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"bonus-tips",children:"Bonus Tips"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Avoid pure white and black:"})," These extremes can make your model look unnatural. Instead, use slightly tinted whites and deep shades of other colors."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Theme-specific accents:"})," Use a pop of vibrant color for focal points to guide the viewer's attention."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Modularity:"})," Create reusable materials or node groups for consistent styling across models."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"By keeping these principles in mind, you can create visually compelling low-poly models with colors that enhance their overall impact!"})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>i,a:()=>l});var r=s(7294);const t={},o=r.createContext(t);function l(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);